"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProvidesHostConfigContext = exports.AdaptiveCardUsingHostConfigContext = exports.HostConfigContext = void 0;
var react_1 = __importStar(require("react"));
var adaptive_card_1 = require("./adaptive-card");
exports.HostConfigContext = (0, react_1.createContext)({ hostConfig: null });
var AdaptiveCardUsingHostConfigContext = function (props) {
    var context = (0, react_1.useContext)(exports.HostConfigContext);
    return react_1.default.createElement(adaptive_card_1.AdaptiveCard, __assign({}, props, { hostConfig: context.hostConfig }));
};
exports.AdaptiveCardUsingHostConfigContext = AdaptiveCardUsingHostConfigContext;
var ProvidesHostConfigContext = function (_a) {
    var hostConfig = _a.hostConfig, children = _a.children;
    return react_1.default.createElement(exports.HostConfigContext.Provider, { value: { hostConfig: hostConfig } }, children);
};
exports.ProvidesHostConfigContext = ProvidesHostConfigContext;
//# sourceMappingURL=host-config-context.js.map