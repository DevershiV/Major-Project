{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GlobalRegistry = exports.CardObjectRegistry = exports.ElementSingletonBehavior = void 0;\nvar serialization_1 = require(\"./serialization\");\n/**\r\n * Describes whether a certain element can be parsed in a \"singleton\" context.\r\n * Specifically, is the element allowed to exist as an object in a context where the\r\n * parent expects an Array of elements (e.g. `AdaptiveCard.body`)\r\n *\r\n * @example - Singleton element in a container (note `items` contains an `object` rather than an `Array<object>`)\r\n * ```json\r\n * {\r\n *     \"type\": \"Container\",\r\n *     \"items\": {\r\n *         \"type\": \"AllowedSingletonElement\"\r\n *     }\r\n * }\r\n * ```\r\n */\nvar ElementSingletonBehavior;\n(function (ElementSingletonBehavior) {\n  /** Element only valid in a singleton context. */\n  ElementSingletonBehavior[ElementSingletonBehavior[\"Only\"] = 0] = \"Only\";\n  /** Element is allowed in a singleton context, but not required to be a singleton. */\n  ElementSingletonBehavior[ElementSingletonBehavior[\"Allowed\"] = 1] = \"Allowed\";\n  /** Element is not allowed to exist in a singleton context. */\n  ElementSingletonBehavior[ElementSingletonBehavior[\"NotAllowed\"] = 2] = \"NotAllowed\";\n})(ElementSingletonBehavior = exports.ElementSingletonBehavior || (exports.ElementSingletonBehavior = {}));\nvar CardObjectRegistry = /** @class */function () {\n  function CardObjectRegistry() {\n    this._items = {};\n  }\n  CardObjectRegistry.prototype.findByName = function (typeName) {\n    return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;\n  };\n  CardObjectRegistry.prototype.clear = function () {\n    this._items = {};\n  };\n  CardObjectRegistry.prototype.copyTo = function (target) {\n    var keys = Object.keys(this._items);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      var typeRegistration = this._items[key];\n      target.register(typeRegistration.typeName, typeRegistration.objectType, typeRegistration.schemaVersion, typeRegistration.singletonBehavior);\n    }\n  };\n  CardObjectRegistry.prototype.register = function (typeName, objectType, schemaVersion, singletonBehavior) {\n    if (schemaVersion === void 0) {\n      schemaVersion = serialization_1.Versions.v1_0;\n    }\n    if (singletonBehavior === void 0) {\n      singletonBehavior = ElementSingletonBehavior.NotAllowed;\n    }\n    var registrationInfo = this.findByName(typeName);\n    if (registrationInfo !== undefined) {\n      registrationInfo.objectType = objectType;\n    } else {\n      registrationInfo = {\n        typeName: typeName,\n        objectType: objectType,\n        schemaVersion: schemaVersion,\n        singletonBehavior: singletonBehavior\n      };\n    }\n    this._items[typeName] = registrationInfo;\n  };\n  CardObjectRegistry.prototype.unregister = function (typeName) {\n    delete this._items[typeName];\n  };\n  CardObjectRegistry.prototype.createInstance = function (typeName, targetVersion) {\n    var registrationInfo = this.findByName(typeName);\n    return registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0 ? new registrationInfo.objectType() : undefined;\n  };\n  CardObjectRegistry.prototype.getItemCount = function () {\n    return Object.keys(this._items).length;\n  };\n  CardObjectRegistry.prototype.getItemAt = function (index) {\n    var _this = this;\n    return Object.keys(this._items).map(function (e) {\n      return _this._items[e];\n    })[index];\n  };\n  return CardObjectRegistry;\n}();\nexports.CardObjectRegistry = CardObjectRegistry;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nvar GlobalRegistry = /** @class */function () {\n  function GlobalRegistry() {}\n  GlobalRegistry.populateWithDefaultElements = function (registry) {\n    registry.clear();\n    GlobalRegistry.defaultElements.copyTo(registry);\n  };\n  GlobalRegistry.populateWithDefaultActions = function (registry) {\n    registry.clear();\n    GlobalRegistry.defaultActions.copyTo(registry);\n  };\n  Object.defineProperty(GlobalRegistry, \"elements\", {\n    get: function () {\n      if (!GlobalRegistry._elements) {\n        GlobalRegistry._elements = new CardObjectRegistry();\n        GlobalRegistry.populateWithDefaultElements(GlobalRegistry._elements);\n      }\n      return GlobalRegistry._elements;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(GlobalRegistry, \"actions\", {\n    get: function () {\n      if (!GlobalRegistry._actions) {\n        GlobalRegistry._actions = new CardObjectRegistry();\n        GlobalRegistry.populateWithDefaultActions(GlobalRegistry._actions);\n      }\n      return GlobalRegistry._actions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  GlobalRegistry.reset = function () {\n    GlobalRegistry._elements = undefined;\n    GlobalRegistry._actions = undefined;\n  };\n  GlobalRegistry.defaultElements = new CardObjectRegistry();\n  GlobalRegistry.defaultActions = new CardObjectRegistry();\n  return GlobalRegistry;\n}();\nexports.GlobalRegistry = GlobalRegistry;","map":{"version":3,"mappings":"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","names":["ElementSingletonBehavior","exports","CardObjectRegistry","typeName","_items","hasOwnProperty","undefined","target","keys","Object","keys_1","_i","key","typeRegistration","register","objectType","schemaVersion","singletonBehavior","serialization_1","v1_0","NotAllowed","registrationInfo","findByName","targetVersion","compareTo","length","index","map","e","GlobalRegistry","registry","clear","defaultElements","copyTo","defaultActions","_elements","populateWithDefaultElements","_actions","populateWithDefaultActions"],"sourceRoot":"","sources":["../src/registry.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}